<?php

namespace Tests\GraphQL\Helpers\Traits;

use App\Models\enums\TransactionStatus;
use App\Models\Transaction;

trait InteractsWithTestTransactions
{
    /**
     * Create a test Transaction.
     *
     * @param string $owner_type
     * @param string $owner_id
     * @return mixed
     */
    public function createTransaction(string $owner_type, string $owner_id)
    {
        $transaction = $transaction = factory(Transaction::class)->create([
            'transaction_status' => TransactionStatus::PENDING,
            'owner_type' => $owner_type,
            'owner_id' => $owner_id
        ]);

        return $transaction;
    }

    /**
     * Make (do not save into the DB) a test transaction.
     *
     * @param string $owner_type
     * @param string $owner_id
     * @param array|null $transactionData An array of transaction data to override default ones generated by the model factory.
     * @return mixed
     */
    public function makeTransaction(string $owner_type, string $owner_id, array $transactionData = null)
    {
        $defaultData = [
            'owner_type' => $owner_type,
            'owner_id' => $owner_id
        ];

        $data = isset($transactionData) ? array_merge($defaultData, $transactionData) : $defaultData;

        $transaction  = collect(factory(Transaction::class)->make($data));
        $transaction = $transaction->except(['owner_id', 'owner_type'])->toArray();

        $transactionData = [
            'owner_id' => $owner_id,
            'transaction_details' => $transaction
        ];

        return $transactionData;
    }
}
