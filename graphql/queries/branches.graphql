extend type Query @middleware(checks: ["auth:api"]){
    """ Get a company branch by their ID """
    GetBranchById(id: ID! @eq): CompanyBranch @find(model: "App\\Models\\CompanyBranch")

    """ Get all customers that belong to a branch """
    GetBranchCustomers(
        branch_id: ID!,
        orderBy: [OrderByClause!] @orderBy(columns: ["created_at"])
    ): [User]!
    @paginate(builder: "App\\GraphQL\\Queries\\GetBranchCustomers", defaultCount: 10)

    """ Get all loans that belong to a branch """
    GetBranchLoans(
        branch_id: ID!,
        loan_condition_status: LoanConditionStatus @where(operator: "="),
        orderBy: [OrderByClause!] @orderBy(columns: ["created_at"])
    ): [Loan]!
    @paginate(builder: "App\\GraphQL\\Queries\\GetBranchLoans", defaultCount: 10)

    """ Get all loan applications that belong to a branch """
    GetBranchLoanApplications(
        branch_id: ID!,
        orderBy: [OrderByClause!] @orderBy(columns: ["created_at"])
    ): [LoanApplication]!
    @paginate(builder: "App\\GraphQL\\Queries\\GetBranchLoanApplications", defaultCount: 10)

    """ Search/Filter a branch's customers """
    SearchBranchCustomers(
        branch_id: ID!
        search_query: String
        start_date: Date
        end_date: Date
        orderBy: [OrderByClause!] @orderBy(columns: ["created_at"])
    ): [User]!
    @paginate(builder: "App\\GraphQL\\Queries\\SearchBranchCustomers", defaultCount: 10)
}
